{"ast":null,"code":"import _slicedToArray from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/src/Solo.js\";\nimport React from \"react\";\nimport \"./Solo.css\"; //-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Board)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.checkWinner = function () {\n      var winLines = [[\"0\", \"1\", \"2\"], [\"3\", \"4\", \"5\"], [\"6\", \"7\", \"8\"], [\"0\", \"3\", \"6\"], [\"1\", \"4\", \"7\"], [\"2\", \"5\", \"8\"], [\"0\", \"4\", \"8\"], [\"2\", \"4\", \"6\"]];\n\n      for (var index = 0; index < winLines.length; index++) {\n        var _winLines$index = _slicedToArray(winLines[index], 3),\n            a = _winLines$index[0],\n            b = _winLines$index[1],\n            c = _winLines$index[2];\n\n        if (_this.props.board[a] && _this.props.board[a] === _this.props.board[b] && _this.props.board[a] === _this.props.board[c]) {\n          _this.props.gameHandle(\"win\");\n        } else if (!(_this.props.board[a] && _this.props.board[a] === _this.props.board[b] && _this.props.board[a] === _this.props.board[c]) && !_this.props.board.includes(null)) {\n          _this.props.gameHandle(\"tie\");\n        }\n      }\n    };\n\n    _this.computer = function (emptyBlocks) {\n      var number = Math.floor(Math.random() * emptyBlocks.length);\n      var comBlock = emptyBlocks[number];\n      console.log(number, emptyBlocks[number], comBlock);\n      return comBlock;\n    };\n\n    _this.handleClick = function (index) {\n      var newBoard = _this.props.board;\n      var emptyBlocks = [];\n\n      if (_this.props.board[index] === null) {\n        newBoard[index] = _this.props.player;\n        newBoard.forEach(function (element, index) {\n          if (element === null) {\n            emptyBlocks.push(index);\n          }\n        });\n        newBoard[_this.computer(emptyBlocks)] = _this.props.computer;\n        console.log(newBoard);\n\n        _this.setState({\n          board: newBoard\n        });\n      }\n\n      _this.checkWinner();\n    };\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.props.board.map(function (box, index) {\n        return React.createElement(\"div\", {\n          className: \"box\",\n          key: index,\n          onClick: function onClick() {\n            return _this2.handleClick(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, box);\n      }));\n    }\n  }]);\n\n  return Board;\n}(React.Component); //-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n\n\nvar SelectSymbol =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(SelectSymbol, _React$Component2);\n\n  function SelectSymbol() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, SelectSymbol);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(SelectSymbol)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _this3.handleSymbol = function (side) {\n      _this3.props.symbolHandle(side);\n    };\n\n    return _this3;\n  }\n\n  _createClass(SelectSymbol, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Select\",\n        style: {\n          display: \"\".concat(this.props.display)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Select Player Symbol\"), React.createElement(\"div\", {\n        className: \"symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box\",\n        onClick: function onClick() {\n          return _this4.handleSymbol(\"X\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"div\", {\n        className: \"box\",\n        onClick: function onClick() {\n          return _this4.handleSymbol(\"O\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"O\")));\n    }\n  }]);\n\n  return SelectSymbol;\n}(React.Component); //-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n\n\nvar Result =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Result, _React$Component3);\n\n  function Result() {\n    _classCallCheck(this, Result);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Result).apply(this, arguments));\n  }\n\n  _createClass(Result, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"result\",\n        style: {\n          display: \"\".concat(this.props.display)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.props.gameStatus === \"win\" ? React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"YAY!! Winnner. Wanna Play again?\") : this.props.gameStatus === \"tie\" ? React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"You Tied.\") : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"You Lost. Try Again?\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this5.props.reset();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Play Again\"));\n    }\n  }]);\n\n  return Result;\n}(React.Component); //-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n\n\nvar Solo =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(Solo, _React$Component4);\n\n  function Solo() {\n    var _getPrototypeOf4;\n\n    var _this6;\n\n    _classCallCheck(this, Solo);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this6 = _possibleConstructorReturn(this, (_getPrototypeOf4 = _getPrototypeOf(Solo)).call.apply(_getPrototypeOf4, [this].concat(args)));\n    _this6.state = {\n      board: Array(9).fill(null),\n      gameCompleteState: \"\",\n      player: \"\",\n      computer: \"\",\n      turn: 0,\n      displaySelection: \"\",\n      displayResult: \"none\"\n    };\n\n    _this6.symbolHandle = function (side) {\n      if (side === \"X\") {\n        _this6.setState({\n          player: \"X\",\n          computer: \"O\",\n          displaySelection: \"none\"\n        });\n      } else if (side === \"O\") {\n        _this6.setState({\n          player: \"O\",\n          computer: \"X\",\n          displaySelection: \"none\"\n        });\n      }\n    };\n\n    _this6.gameHandle = function (gameState) {\n      _this6.setState({\n        gameCompleteState: gameState,\n        displayResult: \"\"\n      });\n    };\n\n    _this6.resetGame = function () {\n      _this6.setState({\n        board: Array(9).fill(null),\n        gameCompleteState: \"\",\n        player: \"\",\n        turn: 0,\n        displaySelection: \"\",\n        displayResult: \"none\"\n      });\n    };\n\n    return _this6;\n  }\n\n  _createClass(Solo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Solo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(SelectSymbol, {\n        display: this.state.displaySelection,\n        symbolHandle: this.symbolHandle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(Board, {\n        board: this.state.board,\n        player: this.state.player,\n        computer: this.state.computer,\n        gameHandle: this.gameHandle,\n        turn: this.state.turn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(Result, {\n        display: this.state.displayResult,\n        gameStatus: this.state.gameCompleteState,\n        winner: this.state.player,\n        reset: this.resetGame,\n        player: this.state.player,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Solo;\n}(React.Component);\n\nexport default Solo;","map":{"version":3,"sources":["/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/src/Solo.js"],"names":["React","Board","checkWinner","winLines","index","length","a","b","c","props","board","gameHandle","includes","computer","emptyBlocks","number","Math","floor","random","comBlock","console","log","handleClick","newBoard","player","forEach","element","push","setState","map","box","Component","SelectSymbol","handleSymbol","side","symbolHandle","display","Result","gameStatus","reset","Solo","state","Array","fill","gameCompleteState","turn","displaySelection","displayResult","gameState","resetGame"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Solo.css\";\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\nclass Board extends React.Component {\n  checkWinner = () => {\n    let winLines = [\n      [\"0\", \"1\", \"2\"],\n      [\"3\", \"4\", \"5\"],\n      [\"6\", \"7\", \"8\"],\n      [\"0\", \"3\", \"6\"],\n      [\"1\", \"4\", \"7\"],\n      [\"2\", \"5\", \"8\"],\n      [\"0\", \"4\", \"8\"],\n      [\"2\", \"4\", \"6\"]\n    ];\n    for (let index = 0; index < winLines.length; index++) {\n      const [a, b, c] = winLines[index];\n      if (\n        this.props.board[a] &&\n        this.props.board[a] === this.props.board[b] &&\n        this.props.board[a] === this.props.board[c]\n      ) {\n        this.props.gameHandle(\"win\");\n      } else if (\n        !(\n          this.props.board[a] &&\n          this.props.board[a] === this.props.board[b] &&\n          this.props.board[a] === this.props.board[c]\n        ) &&\n        !this.props.board.includes(null)\n      ) {\n        this.props.gameHandle(\"tie\");\n      }\n    }\n  };\n\n  computer = emptyBlocks => {\n    let number = Math.floor(Math.random() * emptyBlocks.length);\n    let comBlock = emptyBlocks[number];\n    console.log(number, emptyBlocks[number], comBlock);\n    return comBlock;\n  };\n\n  handleClick = index => {\n    let newBoard = this.props.board;\n    let emptyBlocks = [];\n\n    if (this.props.board[index] === null) {\n      newBoard[index] = this.props.player;\n      newBoard.forEach((element, index) => {\n        if (element === null) {\n          emptyBlocks.push(index);\n        }\n      });\n      newBoard[this.computer(emptyBlocks)] = this.props.computer;\n      console.log(newBoard);\n      this.setState({\n        board: newBoard\n      });\n    }\n\n    this.checkWinner();\n  };\n  render() {\n    return (\n      <div className=\"Board\">\n        {this.props.board.map((box, index) => (\n          <div\n            className=\"box\"\n            key={index}\n            onClick={() => this.handleClick(index)}\n          >\n            {box}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n\nclass SelectSymbol extends React.Component {\n  handleSymbol = side => {\n    this.props.symbolHandle(side);\n  };\n\n  render() {\n    return (\n      <div className=\"Select\" style={{ display: `${this.props.display}` }}>\n        <p>Select Player Symbol</p>\n        <div className=\"symbol\">\n          <div className=\"box\" onClick={() => this.handleSymbol(\"X\")}>\n            X\n          </div>\n          <div className=\"box\" onClick={() => this.handleSymbol(\"O\")}>\n            O\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\nclass Result extends React.Component {\n  render() {\n    return (\n      <div className=\"result\" style={{ display: `${this.props.display}` }}>\n        {this.props.gameStatus === \"win\" ? (\n          <h3>YAY!! Winnner. Wanna Play again?</h3>\n        ) : this.props.gameStatus === \"tie\" ? (\n          <h3>You Tied.</h3>\n        ) : (\n          <h3>You Lost. Try Again?</h3>\n        )}\n        <button\n          onClick={() => {\n            this.props.reset();\n          }}\n        >\n          Play Again\n        </button>\n      </div>\n    );\n  }\n}\n\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\nclass Solo extends React.Component {\n  state = {\n    board: Array(9).fill(null),\n    gameCompleteState: \"\",\n    player: \"\",\n    computer: \"\",\n    turn: 0,\n    displaySelection: \"\",\n    displayResult: \"none\"\n  };\n  symbolHandle = side => {\n    if (side === \"X\") {\n      this.setState({\n        player: \"X\",\n        computer: \"O\",\n        displaySelection: \"none\"\n      });\n    } else if (side === \"O\") {\n      this.setState({\n        player: \"O\",\n        computer: \"X\",\n        displaySelection: \"none\"\n      });\n    }\n  };\n\n  gameHandle = gameState => {\n    this.setState({\n      gameCompleteState: gameState,\n      displayResult: \"\"\n    });\n  };\n  resetGame = () => {\n    this.setState({\n      board: Array(9).fill(null),\n      gameCompleteState: \"\",\n      player: \"\",\n      turn: 0,\n      displaySelection: \"\",\n      displayResult: \"none\"\n    });\n  };\n  render() {\n    return (\n      <div className=\"Solo\">\n        <SelectSymbol\n          display={this.state.displaySelection}\n          symbolHandle={this.symbolHandle}\n        />\n        <Board\n          board={this.state.board}\n          player={this.state.player}\n          computer={this.state.computer}\n          gameHandle={this.gameHandle}\n          turn={this.state.turn}\n        />\n        <Result\n          display={this.state.displayResult}\n          gameStatus={this.state.gameCompleteState}\n          winner={this.state.player}\n          reset={this.resetGame}\n          player={this.state.player}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Solo;\n"]},"metadata":{},"sourceType":"module"}