{"ast":null,"code":"import _slicedToArray from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/src/P2P.js\";\nimport React from \"react\";\nimport SelectSymbol from \"./SelectSymbol\";\nimport Result from \"./Result\";\nimport \"./P2P.css\"; //-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Board)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.checkWinner = function () {\n      var winLines = [[\"0\", \"1\", \"2\"], [\"3\", \"4\", \"5\"], [\"6\", \"7\", \"8\"], [\"0\", \"3\", \"6\"], [\"1\", \"4\", \"7\"], [\"2\", \"5\", \"8\"], [\"0\", \"4\", \"8\"], [\"2\", \"4\", \"6\"]];\n\n      for (var index = 0; index < winLines.length; index++) {\n        var _winLines$index = _slicedToArray(winLines[index], 3),\n            a = _winLines$index[0],\n            b = _winLines$index[1],\n            c = _winLines$index[2];\n\n        if (_this.props.board[a] && _this.props.board[a] === _this.props.board[b] && _this.props.board[a] === _this.props.board[c]) {\n          _this.props.gameHandle(\"win\");\n        } else if (!_this.props.board.includes(null)) {\n          _this.props.gameHandle(\"tie\");\n        }\n      }\n    };\n\n    _this.handleClick = function (index) {\n      var newBoard = _this.props.board;\n\n      if (_this.props.board[index] === null) {\n        newBoard[index] = _this.props.player;\n\n        _this.setState({\n          board: newBoard\n        });\n\n        _this.props.playerhandle();\n      }\n\n      _this.checkWinner();\n    };\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.board.map(function (box, index) {\n        return React.createElement(\"div\", {\n          className: \"box\",\n          key: index,\n          onClick: function onClick() {\n            return _this2.handleClick(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, box, \" \");\n      }));\n    }\n  }]);\n\n  return Board;\n}(React.Component); //-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n\n\nvar P2P =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(P2P, _React$Component2);\n\n  function P2P() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, P2P);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(P2P)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this3.state = {\n      board: Array(9).fill(null),\n      gameCompleteState: \"\",\n      playerSymbolSelect: false,\n      player: \"\",\n      displaySelection: \"\",\n      displayResult: \"none\"\n    };\n\n    _this3.symbolHandle = function (side) {\n      _this3.setState({\n        player: side,\n        displaySelection: \"none\"\n      });\n\n      console.log(side);\n      console.log(_this3.state);\n    };\n\n    _this3.playerhandle = function () {\n      _this3.setState({\n        player: _this3.state.player === \"X\" ? \"O\" : \"X\"\n      });\n    };\n\n    _this3.gameHandle = function (gameState) {\n      _this3.setState({\n        gameCompleteState: gameState,\n        displayResult: \"\",\n        player: _this3.state.player === \"X\" ? \"O\" : \"X\"\n      });\n    };\n\n    _this3.resetGame = function () {\n      _this3.setState({\n        board: Array(9).fill(null),\n        gameCompleteState: \"\",\n        playerSymbolSelect: false,\n        player: \"\",\n        displaySelection: \"\",\n        displayResult: \"none\"\n      });\n    };\n\n    return _this3;\n  }\n\n  _createClass(P2P, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"P2P\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(SelectSymbol, {\n        display: this.state.displaySelection,\n        symbolHandle: this.symbolHandle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Board, {\n        board: this.state.board,\n        player: this.state.player,\n        playerhandle: this.playerhandle,\n        gameHandle: this.gameHandle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Result, {\n        display: this.state.displayResult,\n        gameStatus: this.state.gameCompleteState,\n        winner: this.state.player,\n        reset: this.resetGame,\n        player: this.state.player,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return P2P;\n}(React.Component);\n\nexport default P2P;","map":{"version":3,"sources":["/Users/hyrglobalsystem/Desktop/react-apps/tictactoe/src/P2P.js"],"names":["React","SelectSymbol","Result","Board","checkWinner","winLines","index","length","a","b","c","props","board","gameHandle","includes","handleClick","newBoard","player","setState","playerhandle","map","box","Component","P2P","state","Array","fill","gameCompleteState","playerSymbolSelect","displaySelection","displayResult","symbolHandle","side","console","log","gameState","resetGame"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SelectSymbol from \"./SelectSymbol\";\nimport Result from \"./Result\";\nimport \"./P2P.css\";\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\nclass Board extends React.Component {\n  checkWinner = () => {\n    let winLines = [\n      [\"0\", \"1\", \"2\"],\n      [\"3\", \"4\", \"5\"],\n      [\"6\", \"7\", \"8\"],\n      [\"0\", \"3\", \"6\"],\n      [\"1\", \"4\", \"7\"],\n      [\"2\", \"5\", \"8\"],\n      [\"0\", \"4\", \"8\"],\n      [\"2\", \"4\", \"6\"]\n    ];\n    for (let index = 0; index < winLines.length; index++) {\n      const [a, b, c] = winLines[index];\n      if (\n        this.props.board[a] &&\n        this.props.board[a] === this.props.board[b] &&\n        this.props.board[a] === this.props.board[c]\n      ) {\n        this.props.gameHandle(\"win\");\n      } else if (!this.props.board.includes(null)) {\n        this.props.gameHandle(\"tie\");\n      }\n    }\n  };\n\n  handleClick = index => {\n    let newBoard = this.props.board;\n    if (this.props.board[index] === null) {\n      newBoard[index] = this.props.player;\n\n      this.setState({\n        board: newBoard\n      });\n      this.props.playerhandle();\n    }\n    this.checkWinner();\n  };\n  render() {\n    return (\n      <div className=\"Board\">\n        {this.props.board.map((box, index) => (\n          <div\n            className=\"box\"\n            key={index}\n            onClick={() => this.handleClick(index)}\n          >\n            {box}{\" \"}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\n//-------------------------------------------------------------------------------------------------------------------------------------------\nclass P2P extends React.Component {\n  state = {\n    board: Array(9).fill(null),\n    gameCompleteState: \"\",\n    playerSymbolSelect: false,\n    player: \"\",\n    displaySelection: \"\",\n    displayResult: \"none\"\n  };\n  symbolHandle = side => {\n    this.setState({\n      player: side,\n      displaySelection: \"none\"\n    });\n    console.log(side);\n    console.log(this.state);\n  };\n\n  playerhandle = () => {\n    this.setState({\n      player: this.state.player === \"X\" ? \"O\" : \"X\"\n    });\n  };\n\n  gameHandle = gameState => {\n    this.setState({\n      gameCompleteState: gameState,\n      displayResult: \"\",\n      player: this.state.player === \"X\" ? \"O\" : \"X\"\n    });\n  };\n  resetGame = () => {\n    this.setState({\n      board: Array(9).fill(null),\n      gameCompleteState: \"\",\n      playerSymbolSelect: false,\n      player: \"\",\n      displaySelection: \"\",\n      displayResult: \"none\"\n    });\n  };\n  render() {\n    return (\n      <div className=\"P2P\">\n        <SelectSymbol\n          display={this.state.displaySelection}\n          symbolHandle={this.symbolHandle}\n        />\n        <Board\n          board={this.state.board}\n          player={this.state.player}\n          playerhandle={this.playerhandle}\n          gameHandle={this.gameHandle}\n        />\n        <Result\n          display={this.state.displayResult}\n          gameStatus={this.state.gameCompleteState}\n          winner={this.state.player}\n          reset={this.resetGame}\n          player={this.state.player}\n        />\n      </div>\n    );\n  }\n}\n\nexport default P2P;\n"]},"metadata":{},"sourceType":"module"}